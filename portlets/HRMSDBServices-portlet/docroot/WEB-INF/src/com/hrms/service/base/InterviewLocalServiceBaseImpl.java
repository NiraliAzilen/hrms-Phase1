/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.hrms.service.base;

import com.hrms.model.Interview;

import com.hrms.service.InterviewLocalService;
import com.hrms.service.persistence.CandidatePersistence;
import com.hrms.service.persistence.CandidateQualificationPersistence;
import com.hrms.service.persistence.EmployeeAchivementPersistence;
import com.hrms.service.persistence.EmployeeAttendancePersistence;
import com.hrms.service.persistence.EmployeeComplaintPersistence;
import com.hrms.service.persistence.EmployeeDepartmentPersistence;
import com.hrms.service.persistence.EmployeeDesignationPersistence;
import com.hrms.service.persistence.EmployeeLanguageDetailPersistence;
import com.hrms.service.persistence.EmployeeLeavePersistence;
import com.hrms.service.persistence.EmployeeMasterPersistence;
import com.hrms.service.persistence.EmployeePreviousCompanyPersistence;
import com.hrms.service.persistence.EmployeeProofPersistence;
import com.hrms.service.persistence.EmployeeQualificationPersistence;
import com.hrms.service.persistence.EmployeeSubDepartmentPersistence;
import com.hrms.service.persistence.EmployeeTimesheetPersistence;
import com.hrms.service.persistence.EmployeeTypePersistence;
import com.hrms.service.persistence.EmployeeWarningPersistence;
import com.hrms.service.persistence.InterviewPersistence;
import com.hrms.service.persistence.JobLibraryPersistence;
import com.hrms.service.persistence.LeavePersistence;
import com.hrms.service.persistence.LeavesAppliedPersistence;
import com.hrms.service.persistence.OfferPersistence;
import com.hrms.service.persistence.ProofPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the interview local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.hrms.service.impl.InterviewLocalServiceImpl}.
 * </p>
 *
 * @author yashpalsinh
 * @see com.hrms.service.impl.InterviewLocalServiceImpl
 * @see com.hrms.service.InterviewLocalServiceUtil
 * @generated
 */
public abstract class InterviewLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements InterviewLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.hrms.service.InterviewLocalServiceUtil} to access the interview local service.
	 */

	/**
	 * Adds the interview to the database. Also notifies the appropriate model listeners.
	 *
	 * @param interview the interview
	 * @return the interview that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Interview addInterview(Interview interview)
		throws SystemException {
		interview.setNew(true);

		return interviewPersistence.update(interview);
	}

	/**
	 * Creates a new interview with the primary key. Does not add the interview to the database.
	 *
	 * @param InterviewId the primary key for the new interview
	 * @return the new interview
	 */
	@Override
	public Interview createInterview(long InterviewId) {
		return interviewPersistence.create(InterviewId);
	}

	/**
	 * Deletes the interview with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param InterviewId the primary key of the interview
	 * @return the interview that was removed
	 * @throws PortalException if a interview with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Interview deleteInterview(long InterviewId)
		throws PortalException, SystemException {
		return interviewPersistence.remove(InterviewId);
	}

	/**
	 * Deletes the interview from the database. Also notifies the appropriate model listeners.
	 *
	 * @param interview the interview
	 * @return the interview that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Interview deleteInterview(Interview interview)
		throws SystemException {
		return interviewPersistence.remove(interview);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(Interview.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return interviewPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.hrms.model.impl.InterviewModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return interviewPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.hrms.model.impl.InterviewModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return interviewPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return interviewPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return interviewPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public Interview fetchInterview(long InterviewId) throws SystemException {
		return interviewPersistence.fetchByPrimaryKey(InterviewId);
	}

	/**
	 * Returns the interview with the primary key.
	 *
	 * @param InterviewId the primary key of the interview
	 * @return the interview
	 * @throws PortalException if a interview with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public Interview getInterview(long InterviewId)
		throws PortalException, SystemException {
		return interviewPersistence.findByPrimaryKey(InterviewId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return interviewPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the interviews.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.hrms.model.impl.InterviewModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of interviews
	 * @param end the upper bound of the range of interviews (not inclusive)
	 * @return the range of interviews
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<Interview> getInterviews(int start, int end)
		throws SystemException {
		return interviewPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of interviews.
	 *
	 * @return the number of interviews
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getInterviewsCount() throws SystemException {
		return interviewPersistence.countAll();
	}

	/**
	 * Updates the interview in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param interview the interview
	 * @return the interview that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Interview updateInterview(Interview interview)
		throws SystemException {
		return interviewPersistence.update(interview);
	}

	/**
	 * Returns the candidate local service.
	 *
	 * @return the candidate local service
	 */
	public com.hrms.service.CandidateLocalService getCandidateLocalService() {
		return candidateLocalService;
	}

	/**
	 * Sets the candidate local service.
	 *
	 * @param candidateLocalService the candidate local service
	 */
	public void setCandidateLocalService(
		com.hrms.service.CandidateLocalService candidateLocalService) {
		this.candidateLocalService = candidateLocalService;
	}

	/**
	 * Returns the candidate remote service.
	 *
	 * @return the candidate remote service
	 */
	public com.hrms.service.CandidateService getCandidateService() {
		return candidateService;
	}

	/**
	 * Sets the candidate remote service.
	 *
	 * @param candidateService the candidate remote service
	 */
	public void setCandidateService(
		com.hrms.service.CandidateService candidateService) {
		this.candidateService = candidateService;
	}

	/**
	 * Returns the candidate persistence.
	 *
	 * @return the candidate persistence
	 */
	public CandidatePersistence getCandidatePersistence() {
		return candidatePersistence;
	}

	/**
	 * Sets the candidate persistence.
	 *
	 * @param candidatePersistence the candidate persistence
	 */
	public void setCandidatePersistence(
		CandidatePersistence candidatePersistence) {
		this.candidatePersistence = candidatePersistence;
	}

	/**
	 * Returns the candidate qualification local service.
	 *
	 * @return the candidate qualification local service
	 */
	public com.hrms.service.CandidateQualificationLocalService getCandidateQualificationLocalService() {
		return candidateQualificationLocalService;
	}

	/**
	 * Sets the candidate qualification local service.
	 *
	 * @param candidateQualificationLocalService the candidate qualification local service
	 */
	public void setCandidateQualificationLocalService(
		com.hrms.service.CandidateQualificationLocalService candidateQualificationLocalService) {
		this.candidateQualificationLocalService = candidateQualificationLocalService;
	}

	/**
	 * Returns the candidate qualification remote service.
	 *
	 * @return the candidate qualification remote service
	 */
	public com.hrms.service.CandidateQualificationService getCandidateQualificationService() {
		return candidateQualificationService;
	}

	/**
	 * Sets the candidate qualification remote service.
	 *
	 * @param candidateQualificationService the candidate qualification remote service
	 */
	public void setCandidateQualificationService(
		com.hrms.service.CandidateQualificationService candidateQualificationService) {
		this.candidateQualificationService = candidateQualificationService;
	}

	/**
	 * Returns the candidate qualification persistence.
	 *
	 * @return the candidate qualification persistence
	 */
	public CandidateQualificationPersistence getCandidateQualificationPersistence() {
		return candidateQualificationPersistence;
	}

	/**
	 * Sets the candidate qualification persistence.
	 *
	 * @param candidateQualificationPersistence the candidate qualification persistence
	 */
	public void setCandidateQualificationPersistence(
		CandidateQualificationPersistence candidateQualificationPersistence) {
		this.candidateQualificationPersistence = candidateQualificationPersistence;
	}

	/**
	 * Returns the employee achivement local service.
	 *
	 * @return the employee achivement local service
	 */
	public com.hrms.service.EmployeeAchivementLocalService getEmployeeAchivementLocalService() {
		return employeeAchivementLocalService;
	}

	/**
	 * Sets the employee achivement local service.
	 *
	 * @param employeeAchivementLocalService the employee achivement local service
	 */
	public void setEmployeeAchivementLocalService(
		com.hrms.service.EmployeeAchivementLocalService employeeAchivementLocalService) {
		this.employeeAchivementLocalService = employeeAchivementLocalService;
	}

	/**
	 * Returns the employee achivement remote service.
	 *
	 * @return the employee achivement remote service
	 */
	public com.hrms.service.EmployeeAchivementService getEmployeeAchivementService() {
		return employeeAchivementService;
	}

	/**
	 * Sets the employee achivement remote service.
	 *
	 * @param employeeAchivementService the employee achivement remote service
	 */
	public void setEmployeeAchivementService(
		com.hrms.service.EmployeeAchivementService employeeAchivementService) {
		this.employeeAchivementService = employeeAchivementService;
	}

	/**
	 * Returns the employee achivement persistence.
	 *
	 * @return the employee achivement persistence
	 */
	public EmployeeAchivementPersistence getEmployeeAchivementPersistence() {
		return employeeAchivementPersistence;
	}

	/**
	 * Sets the employee achivement persistence.
	 *
	 * @param employeeAchivementPersistence the employee achivement persistence
	 */
	public void setEmployeeAchivementPersistence(
		EmployeeAchivementPersistence employeeAchivementPersistence) {
		this.employeeAchivementPersistence = employeeAchivementPersistence;
	}

	/**
	 * Returns the employee attendance local service.
	 *
	 * @return the employee attendance local service
	 */
	public com.hrms.service.EmployeeAttendanceLocalService getEmployeeAttendanceLocalService() {
		return employeeAttendanceLocalService;
	}

	/**
	 * Sets the employee attendance local service.
	 *
	 * @param employeeAttendanceLocalService the employee attendance local service
	 */
	public void setEmployeeAttendanceLocalService(
		com.hrms.service.EmployeeAttendanceLocalService employeeAttendanceLocalService) {
		this.employeeAttendanceLocalService = employeeAttendanceLocalService;
	}

	/**
	 * Returns the employee attendance remote service.
	 *
	 * @return the employee attendance remote service
	 */
	public com.hrms.service.EmployeeAttendanceService getEmployeeAttendanceService() {
		return employeeAttendanceService;
	}

	/**
	 * Sets the employee attendance remote service.
	 *
	 * @param employeeAttendanceService the employee attendance remote service
	 */
	public void setEmployeeAttendanceService(
		com.hrms.service.EmployeeAttendanceService employeeAttendanceService) {
		this.employeeAttendanceService = employeeAttendanceService;
	}

	/**
	 * Returns the employee attendance persistence.
	 *
	 * @return the employee attendance persistence
	 */
	public EmployeeAttendancePersistence getEmployeeAttendancePersistence() {
		return employeeAttendancePersistence;
	}

	/**
	 * Sets the employee attendance persistence.
	 *
	 * @param employeeAttendancePersistence the employee attendance persistence
	 */
	public void setEmployeeAttendancePersistence(
		EmployeeAttendancePersistence employeeAttendancePersistence) {
		this.employeeAttendancePersistence = employeeAttendancePersistence;
	}

	/**
	 * Returns the employee complaint local service.
	 *
	 * @return the employee complaint local service
	 */
	public com.hrms.service.EmployeeComplaintLocalService getEmployeeComplaintLocalService() {
		return employeeComplaintLocalService;
	}

	/**
	 * Sets the employee complaint local service.
	 *
	 * @param employeeComplaintLocalService the employee complaint local service
	 */
	public void setEmployeeComplaintLocalService(
		com.hrms.service.EmployeeComplaintLocalService employeeComplaintLocalService) {
		this.employeeComplaintLocalService = employeeComplaintLocalService;
	}

	/**
	 * Returns the employee complaint remote service.
	 *
	 * @return the employee complaint remote service
	 */
	public com.hrms.service.EmployeeComplaintService getEmployeeComplaintService() {
		return employeeComplaintService;
	}

	/**
	 * Sets the employee complaint remote service.
	 *
	 * @param employeeComplaintService the employee complaint remote service
	 */
	public void setEmployeeComplaintService(
		com.hrms.service.EmployeeComplaintService employeeComplaintService) {
		this.employeeComplaintService = employeeComplaintService;
	}

	/**
	 * Returns the employee complaint persistence.
	 *
	 * @return the employee complaint persistence
	 */
	public EmployeeComplaintPersistence getEmployeeComplaintPersistence() {
		return employeeComplaintPersistence;
	}

	/**
	 * Sets the employee complaint persistence.
	 *
	 * @param employeeComplaintPersistence the employee complaint persistence
	 */
	public void setEmployeeComplaintPersistence(
		EmployeeComplaintPersistence employeeComplaintPersistence) {
		this.employeeComplaintPersistence = employeeComplaintPersistence;
	}

	/**
	 * Returns the employee department local service.
	 *
	 * @return the employee department local service
	 */
	public com.hrms.service.EmployeeDepartmentLocalService getEmployeeDepartmentLocalService() {
		return employeeDepartmentLocalService;
	}

	/**
	 * Sets the employee department local service.
	 *
	 * @param employeeDepartmentLocalService the employee department local service
	 */
	public void setEmployeeDepartmentLocalService(
		com.hrms.service.EmployeeDepartmentLocalService employeeDepartmentLocalService) {
		this.employeeDepartmentLocalService = employeeDepartmentLocalService;
	}

	/**
	 * Returns the employee department remote service.
	 *
	 * @return the employee department remote service
	 */
	public com.hrms.service.EmployeeDepartmentService getEmployeeDepartmentService() {
		return employeeDepartmentService;
	}

	/**
	 * Sets the employee department remote service.
	 *
	 * @param employeeDepartmentService the employee department remote service
	 */
	public void setEmployeeDepartmentService(
		com.hrms.service.EmployeeDepartmentService employeeDepartmentService) {
		this.employeeDepartmentService = employeeDepartmentService;
	}

	/**
	 * Returns the employee department persistence.
	 *
	 * @return the employee department persistence
	 */
	public EmployeeDepartmentPersistence getEmployeeDepartmentPersistence() {
		return employeeDepartmentPersistence;
	}

	/**
	 * Sets the employee department persistence.
	 *
	 * @param employeeDepartmentPersistence the employee department persistence
	 */
	public void setEmployeeDepartmentPersistence(
		EmployeeDepartmentPersistence employeeDepartmentPersistence) {
		this.employeeDepartmentPersistence = employeeDepartmentPersistence;
	}

	/**
	 * Returns the employee designation local service.
	 *
	 * @return the employee designation local service
	 */
	public com.hrms.service.EmployeeDesignationLocalService getEmployeeDesignationLocalService() {
		return employeeDesignationLocalService;
	}

	/**
	 * Sets the employee designation local service.
	 *
	 * @param employeeDesignationLocalService the employee designation local service
	 */
	public void setEmployeeDesignationLocalService(
		com.hrms.service.EmployeeDesignationLocalService employeeDesignationLocalService) {
		this.employeeDesignationLocalService = employeeDesignationLocalService;
	}

	/**
	 * Returns the employee designation remote service.
	 *
	 * @return the employee designation remote service
	 */
	public com.hrms.service.EmployeeDesignationService getEmployeeDesignationService() {
		return employeeDesignationService;
	}

	/**
	 * Sets the employee designation remote service.
	 *
	 * @param employeeDesignationService the employee designation remote service
	 */
	public void setEmployeeDesignationService(
		com.hrms.service.EmployeeDesignationService employeeDesignationService) {
		this.employeeDesignationService = employeeDesignationService;
	}

	/**
	 * Returns the employee designation persistence.
	 *
	 * @return the employee designation persistence
	 */
	public EmployeeDesignationPersistence getEmployeeDesignationPersistence() {
		return employeeDesignationPersistence;
	}

	/**
	 * Sets the employee designation persistence.
	 *
	 * @param employeeDesignationPersistence the employee designation persistence
	 */
	public void setEmployeeDesignationPersistence(
		EmployeeDesignationPersistence employeeDesignationPersistence) {
		this.employeeDesignationPersistence = employeeDesignationPersistence;
	}

	/**
	 * Returns the employee language detail local service.
	 *
	 * @return the employee language detail local service
	 */
	public com.hrms.service.EmployeeLanguageDetailLocalService getEmployeeLanguageDetailLocalService() {
		return employeeLanguageDetailLocalService;
	}

	/**
	 * Sets the employee language detail local service.
	 *
	 * @param employeeLanguageDetailLocalService the employee language detail local service
	 */
	public void setEmployeeLanguageDetailLocalService(
		com.hrms.service.EmployeeLanguageDetailLocalService employeeLanguageDetailLocalService) {
		this.employeeLanguageDetailLocalService = employeeLanguageDetailLocalService;
	}

	/**
	 * Returns the employee language detail remote service.
	 *
	 * @return the employee language detail remote service
	 */
	public com.hrms.service.EmployeeLanguageDetailService getEmployeeLanguageDetailService() {
		return employeeLanguageDetailService;
	}

	/**
	 * Sets the employee language detail remote service.
	 *
	 * @param employeeLanguageDetailService the employee language detail remote service
	 */
	public void setEmployeeLanguageDetailService(
		com.hrms.service.EmployeeLanguageDetailService employeeLanguageDetailService) {
		this.employeeLanguageDetailService = employeeLanguageDetailService;
	}

	/**
	 * Returns the employee language detail persistence.
	 *
	 * @return the employee language detail persistence
	 */
	public EmployeeLanguageDetailPersistence getEmployeeLanguageDetailPersistence() {
		return employeeLanguageDetailPersistence;
	}

	/**
	 * Sets the employee language detail persistence.
	 *
	 * @param employeeLanguageDetailPersistence the employee language detail persistence
	 */
	public void setEmployeeLanguageDetailPersistence(
		EmployeeLanguageDetailPersistence employeeLanguageDetailPersistence) {
		this.employeeLanguageDetailPersistence = employeeLanguageDetailPersistence;
	}

	/**
	 * Returns the employee leave local service.
	 *
	 * @return the employee leave local service
	 */
	public com.hrms.service.EmployeeLeaveLocalService getEmployeeLeaveLocalService() {
		return employeeLeaveLocalService;
	}

	/**
	 * Sets the employee leave local service.
	 *
	 * @param employeeLeaveLocalService the employee leave local service
	 */
	public void setEmployeeLeaveLocalService(
		com.hrms.service.EmployeeLeaveLocalService employeeLeaveLocalService) {
		this.employeeLeaveLocalService = employeeLeaveLocalService;
	}

	/**
	 * Returns the employee leave remote service.
	 *
	 * @return the employee leave remote service
	 */
	public com.hrms.service.EmployeeLeaveService getEmployeeLeaveService() {
		return employeeLeaveService;
	}

	/**
	 * Sets the employee leave remote service.
	 *
	 * @param employeeLeaveService the employee leave remote service
	 */
	public void setEmployeeLeaveService(
		com.hrms.service.EmployeeLeaveService employeeLeaveService) {
		this.employeeLeaveService = employeeLeaveService;
	}

	/**
	 * Returns the employee leave persistence.
	 *
	 * @return the employee leave persistence
	 */
	public EmployeeLeavePersistence getEmployeeLeavePersistence() {
		return employeeLeavePersistence;
	}

	/**
	 * Sets the employee leave persistence.
	 *
	 * @param employeeLeavePersistence the employee leave persistence
	 */
	public void setEmployeeLeavePersistence(
		EmployeeLeavePersistence employeeLeavePersistence) {
		this.employeeLeavePersistence = employeeLeavePersistence;
	}

	/**
	 * Returns the employee master local service.
	 *
	 * @return the employee master local service
	 */
	public com.hrms.service.EmployeeMasterLocalService getEmployeeMasterLocalService() {
		return employeeMasterLocalService;
	}

	/**
	 * Sets the employee master local service.
	 *
	 * @param employeeMasterLocalService the employee master local service
	 */
	public void setEmployeeMasterLocalService(
		com.hrms.service.EmployeeMasterLocalService employeeMasterLocalService) {
		this.employeeMasterLocalService = employeeMasterLocalService;
	}

	/**
	 * Returns the employee master remote service.
	 *
	 * @return the employee master remote service
	 */
	public com.hrms.service.EmployeeMasterService getEmployeeMasterService() {
		return employeeMasterService;
	}

	/**
	 * Sets the employee master remote service.
	 *
	 * @param employeeMasterService the employee master remote service
	 */
	public void setEmployeeMasterService(
		com.hrms.service.EmployeeMasterService employeeMasterService) {
		this.employeeMasterService = employeeMasterService;
	}

	/**
	 * Returns the employee master persistence.
	 *
	 * @return the employee master persistence
	 */
	public EmployeeMasterPersistence getEmployeeMasterPersistence() {
		return employeeMasterPersistence;
	}

	/**
	 * Sets the employee master persistence.
	 *
	 * @param employeeMasterPersistence the employee master persistence
	 */
	public void setEmployeeMasterPersistence(
		EmployeeMasterPersistence employeeMasterPersistence) {
		this.employeeMasterPersistence = employeeMasterPersistence;
	}

	/**
	 * Returns the employee previous company local service.
	 *
	 * @return the employee previous company local service
	 */
	public com.hrms.service.EmployeePreviousCompanyLocalService getEmployeePreviousCompanyLocalService() {
		return employeePreviousCompanyLocalService;
	}

	/**
	 * Sets the employee previous company local service.
	 *
	 * @param employeePreviousCompanyLocalService the employee previous company local service
	 */
	public void setEmployeePreviousCompanyLocalService(
		com.hrms.service.EmployeePreviousCompanyLocalService employeePreviousCompanyLocalService) {
		this.employeePreviousCompanyLocalService = employeePreviousCompanyLocalService;
	}

	/**
	 * Returns the employee previous company remote service.
	 *
	 * @return the employee previous company remote service
	 */
	public com.hrms.service.EmployeePreviousCompanyService getEmployeePreviousCompanyService() {
		return employeePreviousCompanyService;
	}

	/**
	 * Sets the employee previous company remote service.
	 *
	 * @param employeePreviousCompanyService the employee previous company remote service
	 */
	public void setEmployeePreviousCompanyService(
		com.hrms.service.EmployeePreviousCompanyService employeePreviousCompanyService) {
		this.employeePreviousCompanyService = employeePreviousCompanyService;
	}

	/**
	 * Returns the employee previous company persistence.
	 *
	 * @return the employee previous company persistence
	 */
	public EmployeePreviousCompanyPersistence getEmployeePreviousCompanyPersistence() {
		return employeePreviousCompanyPersistence;
	}

	/**
	 * Sets the employee previous company persistence.
	 *
	 * @param employeePreviousCompanyPersistence the employee previous company persistence
	 */
	public void setEmployeePreviousCompanyPersistence(
		EmployeePreviousCompanyPersistence employeePreviousCompanyPersistence) {
		this.employeePreviousCompanyPersistence = employeePreviousCompanyPersistence;
	}

	/**
	 * Returns the employee proof local service.
	 *
	 * @return the employee proof local service
	 */
	public com.hrms.service.EmployeeProofLocalService getEmployeeProofLocalService() {
		return employeeProofLocalService;
	}

	/**
	 * Sets the employee proof local service.
	 *
	 * @param employeeProofLocalService the employee proof local service
	 */
	public void setEmployeeProofLocalService(
		com.hrms.service.EmployeeProofLocalService employeeProofLocalService) {
		this.employeeProofLocalService = employeeProofLocalService;
	}

	/**
	 * Returns the employee proof remote service.
	 *
	 * @return the employee proof remote service
	 */
	public com.hrms.service.EmployeeProofService getEmployeeProofService() {
		return employeeProofService;
	}

	/**
	 * Sets the employee proof remote service.
	 *
	 * @param employeeProofService the employee proof remote service
	 */
	public void setEmployeeProofService(
		com.hrms.service.EmployeeProofService employeeProofService) {
		this.employeeProofService = employeeProofService;
	}

	/**
	 * Returns the employee proof persistence.
	 *
	 * @return the employee proof persistence
	 */
	public EmployeeProofPersistence getEmployeeProofPersistence() {
		return employeeProofPersistence;
	}

	/**
	 * Sets the employee proof persistence.
	 *
	 * @param employeeProofPersistence the employee proof persistence
	 */
	public void setEmployeeProofPersistence(
		EmployeeProofPersistence employeeProofPersistence) {
		this.employeeProofPersistence = employeeProofPersistence;
	}

	/**
	 * Returns the employee qualification local service.
	 *
	 * @return the employee qualification local service
	 */
	public com.hrms.service.EmployeeQualificationLocalService getEmployeeQualificationLocalService() {
		return employeeQualificationLocalService;
	}

	/**
	 * Sets the employee qualification local service.
	 *
	 * @param employeeQualificationLocalService the employee qualification local service
	 */
	public void setEmployeeQualificationLocalService(
		com.hrms.service.EmployeeQualificationLocalService employeeQualificationLocalService) {
		this.employeeQualificationLocalService = employeeQualificationLocalService;
	}

	/**
	 * Returns the employee qualification remote service.
	 *
	 * @return the employee qualification remote service
	 */
	public com.hrms.service.EmployeeQualificationService getEmployeeQualificationService() {
		return employeeQualificationService;
	}

	/**
	 * Sets the employee qualification remote service.
	 *
	 * @param employeeQualificationService the employee qualification remote service
	 */
	public void setEmployeeQualificationService(
		com.hrms.service.EmployeeQualificationService employeeQualificationService) {
		this.employeeQualificationService = employeeQualificationService;
	}

	/**
	 * Returns the employee qualification persistence.
	 *
	 * @return the employee qualification persistence
	 */
	public EmployeeQualificationPersistence getEmployeeQualificationPersistence() {
		return employeeQualificationPersistence;
	}

	/**
	 * Sets the employee qualification persistence.
	 *
	 * @param employeeQualificationPersistence the employee qualification persistence
	 */
	public void setEmployeeQualificationPersistence(
		EmployeeQualificationPersistence employeeQualificationPersistence) {
		this.employeeQualificationPersistence = employeeQualificationPersistence;
	}

	/**
	 * Returns the employee sub department local service.
	 *
	 * @return the employee sub department local service
	 */
	public com.hrms.service.EmployeeSubDepartmentLocalService getEmployeeSubDepartmentLocalService() {
		return employeeSubDepartmentLocalService;
	}

	/**
	 * Sets the employee sub department local service.
	 *
	 * @param employeeSubDepartmentLocalService the employee sub department local service
	 */
	public void setEmployeeSubDepartmentLocalService(
		com.hrms.service.EmployeeSubDepartmentLocalService employeeSubDepartmentLocalService) {
		this.employeeSubDepartmentLocalService = employeeSubDepartmentLocalService;
	}

	/**
	 * Returns the employee sub department remote service.
	 *
	 * @return the employee sub department remote service
	 */
	public com.hrms.service.EmployeeSubDepartmentService getEmployeeSubDepartmentService() {
		return employeeSubDepartmentService;
	}

	/**
	 * Sets the employee sub department remote service.
	 *
	 * @param employeeSubDepartmentService the employee sub department remote service
	 */
	public void setEmployeeSubDepartmentService(
		com.hrms.service.EmployeeSubDepartmentService employeeSubDepartmentService) {
		this.employeeSubDepartmentService = employeeSubDepartmentService;
	}

	/**
	 * Returns the employee sub department persistence.
	 *
	 * @return the employee sub department persistence
	 */
	public EmployeeSubDepartmentPersistence getEmployeeSubDepartmentPersistence() {
		return employeeSubDepartmentPersistence;
	}

	/**
	 * Sets the employee sub department persistence.
	 *
	 * @param employeeSubDepartmentPersistence the employee sub department persistence
	 */
	public void setEmployeeSubDepartmentPersistence(
		EmployeeSubDepartmentPersistence employeeSubDepartmentPersistence) {
		this.employeeSubDepartmentPersistence = employeeSubDepartmentPersistence;
	}

	/**
	 * Returns the employee timesheet local service.
	 *
	 * @return the employee timesheet local service
	 */
	public com.hrms.service.EmployeeTimesheetLocalService getEmployeeTimesheetLocalService() {
		return employeeTimesheetLocalService;
	}

	/**
	 * Sets the employee timesheet local service.
	 *
	 * @param employeeTimesheetLocalService the employee timesheet local service
	 */
	public void setEmployeeTimesheetLocalService(
		com.hrms.service.EmployeeTimesheetLocalService employeeTimesheetLocalService) {
		this.employeeTimesheetLocalService = employeeTimesheetLocalService;
	}

	/**
	 * Returns the employee timesheet remote service.
	 *
	 * @return the employee timesheet remote service
	 */
	public com.hrms.service.EmployeeTimesheetService getEmployeeTimesheetService() {
		return employeeTimesheetService;
	}

	/**
	 * Sets the employee timesheet remote service.
	 *
	 * @param employeeTimesheetService the employee timesheet remote service
	 */
	public void setEmployeeTimesheetService(
		com.hrms.service.EmployeeTimesheetService employeeTimesheetService) {
		this.employeeTimesheetService = employeeTimesheetService;
	}

	/**
	 * Returns the employee timesheet persistence.
	 *
	 * @return the employee timesheet persistence
	 */
	public EmployeeTimesheetPersistence getEmployeeTimesheetPersistence() {
		return employeeTimesheetPersistence;
	}

	/**
	 * Sets the employee timesheet persistence.
	 *
	 * @param employeeTimesheetPersistence the employee timesheet persistence
	 */
	public void setEmployeeTimesheetPersistence(
		EmployeeTimesheetPersistence employeeTimesheetPersistence) {
		this.employeeTimesheetPersistence = employeeTimesheetPersistence;
	}

	/**
	 * Returns the employee type local service.
	 *
	 * @return the employee type local service
	 */
	public com.hrms.service.EmployeeTypeLocalService getEmployeeTypeLocalService() {
		return employeeTypeLocalService;
	}

	/**
	 * Sets the employee type local service.
	 *
	 * @param employeeTypeLocalService the employee type local service
	 */
	public void setEmployeeTypeLocalService(
		com.hrms.service.EmployeeTypeLocalService employeeTypeLocalService) {
		this.employeeTypeLocalService = employeeTypeLocalService;
	}

	/**
	 * Returns the employee type remote service.
	 *
	 * @return the employee type remote service
	 */
	public com.hrms.service.EmployeeTypeService getEmployeeTypeService() {
		return employeeTypeService;
	}

	/**
	 * Sets the employee type remote service.
	 *
	 * @param employeeTypeService the employee type remote service
	 */
	public void setEmployeeTypeService(
		com.hrms.service.EmployeeTypeService employeeTypeService) {
		this.employeeTypeService = employeeTypeService;
	}

	/**
	 * Returns the employee type persistence.
	 *
	 * @return the employee type persistence
	 */
	public EmployeeTypePersistence getEmployeeTypePersistence() {
		return employeeTypePersistence;
	}

	/**
	 * Sets the employee type persistence.
	 *
	 * @param employeeTypePersistence the employee type persistence
	 */
	public void setEmployeeTypePersistence(
		EmployeeTypePersistence employeeTypePersistence) {
		this.employeeTypePersistence = employeeTypePersistence;
	}

	/**
	 * Returns the employee warning local service.
	 *
	 * @return the employee warning local service
	 */
	public com.hrms.service.EmployeeWarningLocalService getEmployeeWarningLocalService() {
		return employeeWarningLocalService;
	}

	/**
	 * Sets the employee warning local service.
	 *
	 * @param employeeWarningLocalService the employee warning local service
	 */
	public void setEmployeeWarningLocalService(
		com.hrms.service.EmployeeWarningLocalService employeeWarningLocalService) {
		this.employeeWarningLocalService = employeeWarningLocalService;
	}

	/**
	 * Returns the employee warning remote service.
	 *
	 * @return the employee warning remote service
	 */
	public com.hrms.service.EmployeeWarningService getEmployeeWarningService() {
		return employeeWarningService;
	}

	/**
	 * Sets the employee warning remote service.
	 *
	 * @param employeeWarningService the employee warning remote service
	 */
	public void setEmployeeWarningService(
		com.hrms.service.EmployeeWarningService employeeWarningService) {
		this.employeeWarningService = employeeWarningService;
	}

	/**
	 * Returns the employee warning persistence.
	 *
	 * @return the employee warning persistence
	 */
	public EmployeeWarningPersistence getEmployeeWarningPersistence() {
		return employeeWarningPersistence;
	}

	/**
	 * Sets the employee warning persistence.
	 *
	 * @param employeeWarningPersistence the employee warning persistence
	 */
	public void setEmployeeWarningPersistence(
		EmployeeWarningPersistence employeeWarningPersistence) {
		this.employeeWarningPersistence = employeeWarningPersistence;
	}

	/**
	 * Returns the interview local service.
	 *
	 * @return the interview local service
	 */
	public com.hrms.service.InterviewLocalService getInterviewLocalService() {
		return interviewLocalService;
	}

	/**
	 * Sets the interview local service.
	 *
	 * @param interviewLocalService the interview local service
	 */
	public void setInterviewLocalService(
		com.hrms.service.InterviewLocalService interviewLocalService) {
		this.interviewLocalService = interviewLocalService;
	}

	/**
	 * Returns the interview remote service.
	 *
	 * @return the interview remote service
	 */
	public com.hrms.service.InterviewService getInterviewService() {
		return interviewService;
	}

	/**
	 * Sets the interview remote service.
	 *
	 * @param interviewService the interview remote service
	 */
	public void setInterviewService(
		com.hrms.service.InterviewService interviewService) {
		this.interviewService = interviewService;
	}

	/**
	 * Returns the interview persistence.
	 *
	 * @return the interview persistence
	 */
	public InterviewPersistence getInterviewPersistence() {
		return interviewPersistence;
	}

	/**
	 * Sets the interview persistence.
	 *
	 * @param interviewPersistence the interview persistence
	 */
	public void setInterviewPersistence(
		InterviewPersistence interviewPersistence) {
		this.interviewPersistence = interviewPersistence;
	}

	/**
	 * Returns the job library local service.
	 *
	 * @return the job library local service
	 */
	public com.hrms.service.JobLibraryLocalService getJobLibraryLocalService() {
		return jobLibraryLocalService;
	}

	/**
	 * Sets the job library local service.
	 *
	 * @param jobLibraryLocalService the job library local service
	 */
	public void setJobLibraryLocalService(
		com.hrms.service.JobLibraryLocalService jobLibraryLocalService) {
		this.jobLibraryLocalService = jobLibraryLocalService;
	}

	/**
	 * Returns the job library remote service.
	 *
	 * @return the job library remote service
	 */
	public com.hrms.service.JobLibraryService getJobLibraryService() {
		return jobLibraryService;
	}

	/**
	 * Sets the job library remote service.
	 *
	 * @param jobLibraryService the job library remote service
	 */
	public void setJobLibraryService(
		com.hrms.service.JobLibraryService jobLibraryService) {
		this.jobLibraryService = jobLibraryService;
	}

	/**
	 * Returns the job library persistence.
	 *
	 * @return the job library persistence
	 */
	public JobLibraryPersistence getJobLibraryPersistence() {
		return jobLibraryPersistence;
	}

	/**
	 * Sets the job library persistence.
	 *
	 * @param jobLibraryPersistence the job library persistence
	 */
	public void setJobLibraryPersistence(
		JobLibraryPersistence jobLibraryPersistence) {
		this.jobLibraryPersistence = jobLibraryPersistence;
	}

	/**
	 * Returns the leave local service.
	 *
	 * @return the leave local service
	 */
	public com.hrms.service.LeaveLocalService getLeaveLocalService() {
		return leaveLocalService;
	}

	/**
	 * Sets the leave local service.
	 *
	 * @param leaveLocalService the leave local service
	 */
	public void setLeaveLocalService(
		com.hrms.service.LeaveLocalService leaveLocalService) {
		this.leaveLocalService = leaveLocalService;
	}

	/**
	 * Returns the leave remote service.
	 *
	 * @return the leave remote service
	 */
	public com.hrms.service.LeaveService getLeaveService() {
		return leaveService;
	}

	/**
	 * Sets the leave remote service.
	 *
	 * @param leaveService the leave remote service
	 */
	public void setLeaveService(com.hrms.service.LeaveService leaveService) {
		this.leaveService = leaveService;
	}

	/**
	 * Returns the leave persistence.
	 *
	 * @return the leave persistence
	 */
	public LeavePersistence getLeavePersistence() {
		return leavePersistence;
	}

	/**
	 * Sets the leave persistence.
	 *
	 * @param leavePersistence the leave persistence
	 */
	public void setLeavePersistence(LeavePersistence leavePersistence) {
		this.leavePersistence = leavePersistence;
	}

	/**
	 * Returns the leaves applied local service.
	 *
	 * @return the leaves applied local service
	 */
	public com.hrms.service.LeavesAppliedLocalService getLeavesAppliedLocalService() {
		return leavesAppliedLocalService;
	}

	/**
	 * Sets the leaves applied local service.
	 *
	 * @param leavesAppliedLocalService the leaves applied local service
	 */
	public void setLeavesAppliedLocalService(
		com.hrms.service.LeavesAppliedLocalService leavesAppliedLocalService) {
		this.leavesAppliedLocalService = leavesAppliedLocalService;
	}

	/**
	 * Returns the leaves applied remote service.
	 *
	 * @return the leaves applied remote service
	 */
	public com.hrms.service.LeavesAppliedService getLeavesAppliedService() {
		return leavesAppliedService;
	}

	/**
	 * Sets the leaves applied remote service.
	 *
	 * @param leavesAppliedService the leaves applied remote service
	 */
	public void setLeavesAppliedService(
		com.hrms.service.LeavesAppliedService leavesAppliedService) {
		this.leavesAppliedService = leavesAppliedService;
	}

	/**
	 * Returns the leaves applied persistence.
	 *
	 * @return the leaves applied persistence
	 */
	public LeavesAppliedPersistence getLeavesAppliedPersistence() {
		return leavesAppliedPersistence;
	}

	/**
	 * Sets the leaves applied persistence.
	 *
	 * @param leavesAppliedPersistence the leaves applied persistence
	 */
	public void setLeavesAppliedPersistence(
		LeavesAppliedPersistence leavesAppliedPersistence) {
		this.leavesAppliedPersistence = leavesAppliedPersistence;
	}

	/**
	 * Returns the offer local service.
	 *
	 * @return the offer local service
	 */
	public com.hrms.service.OfferLocalService getOfferLocalService() {
		return offerLocalService;
	}

	/**
	 * Sets the offer local service.
	 *
	 * @param offerLocalService the offer local service
	 */
	public void setOfferLocalService(
		com.hrms.service.OfferLocalService offerLocalService) {
		this.offerLocalService = offerLocalService;
	}

	/**
	 * Returns the offer remote service.
	 *
	 * @return the offer remote service
	 */
	public com.hrms.service.OfferService getOfferService() {
		return offerService;
	}

	/**
	 * Sets the offer remote service.
	 *
	 * @param offerService the offer remote service
	 */
	public void setOfferService(com.hrms.service.OfferService offerService) {
		this.offerService = offerService;
	}

	/**
	 * Returns the offer persistence.
	 *
	 * @return the offer persistence
	 */
	public OfferPersistence getOfferPersistence() {
		return offerPersistence;
	}

	/**
	 * Sets the offer persistence.
	 *
	 * @param offerPersistence the offer persistence
	 */
	public void setOfferPersistence(OfferPersistence offerPersistence) {
		this.offerPersistence = offerPersistence;
	}

	/**
	 * Returns the proof local service.
	 *
	 * @return the proof local service
	 */
	public com.hrms.service.ProofLocalService getProofLocalService() {
		return proofLocalService;
	}

	/**
	 * Sets the proof local service.
	 *
	 * @param proofLocalService the proof local service
	 */
	public void setProofLocalService(
		com.hrms.service.ProofLocalService proofLocalService) {
		this.proofLocalService = proofLocalService;
	}

	/**
	 * Returns the proof remote service.
	 *
	 * @return the proof remote service
	 */
	public com.hrms.service.ProofService getProofService() {
		return proofService;
	}

	/**
	 * Sets the proof remote service.
	 *
	 * @param proofService the proof remote service
	 */
	public void setProofService(com.hrms.service.ProofService proofService) {
		this.proofService = proofService;
	}

	/**
	 * Returns the proof persistence.
	 *
	 * @return the proof persistence
	 */
	public ProofPersistence getProofPersistence() {
		return proofPersistence;
	}

	/**
	 * Sets the proof persistence.
	 *
	 * @param proofPersistence the proof persistence
	 */
	public void setProofPersistence(ProofPersistence proofPersistence) {
		this.proofPersistence = proofPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.hrms.model.Interview",
			interviewLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.hrms.model.Interview");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Interview.class;
	}

	protected String getModelClassName() {
		return Interview.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = interviewPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.hrms.service.CandidateLocalService.class)
	protected com.hrms.service.CandidateLocalService candidateLocalService;
	@BeanReference(type = com.hrms.service.CandidateService.class)
	protected com.hrms.service.CandidateService candidateService;
	@BeanReference(type = CandidatePersistence.class)
	protected CandidatePersistence candidatePersistence;
	@BeanReference(type = com.hrms.service.CandidateQualificationLocalService.class)
	protected com.hrms.service.CandidateQualificationLocalService candidateQualificationLocalService;
	@BeanReference(type = com.hrms.service.CandidateQualificationService.class)
	protected com.hrms.service.CandidateQualificationService candidateQualificationService;
	@BeanReference(type = CandidateQualificationPersistence.class)
	protected CandidateQualificationPersistence candidateQualificationPersistence;
	@BeanReference(type = com.hrms.service.EmployeeAchivementLocalService.class)
	protected com.hrms.service.EmployeeAchivementLocalService employeeAchivementLocalService;
	@BeanReference(type = com.hrms.service.EmployeeAchivementService.class)
	protected com.hrms.service.EmployeeAchivementService employeeAchivementService;
	@BeanReference(type = EmployeeAchivementPersistence.class)
	protected EmployeeAchivementPersistence employeeAchivementPersistence;
	@BeanReference(type = com.hrms.service.EmployeeAttendanceLocalService.class)
	protected com.hrms.service.EmployeeAttendanceLocalService employeeAttendanceLocalService;
	@BeanReference(type = com.hrms.service.EmployeeAttendanceService.class)
	protected com.hrms.service.EmployeeAttendanceService employeeAttendanceService;
	@BeanReference(type = EmployeeAttendancePersistence.class)
	protected EmployeeAttendancePersistence employeeAttendancePersistence;
	@BeanReference(type = com.hrms.service.EmployeeComplaintLocalService.class)
	protected com.hrms.service.EmployeeComplaintLocalService employeeComplaintLocalService;
	@BeanReference(type = com.hrms.service.EmployeeComplaintService.class)
	protected com.hrms.service.EmployeeComplaintService employeeComplaintService;
	@BeanReference(type = EmployeeComplaintPersistence.class)
	protected EmployeeComplaintPersistence employeeComplaintPersistence;
	@BeanReference(type = com.hrms.service.EmployeeDepartmentLocalService.class)
	protected com.hrms.service.EmployeeDepartmentLocalService employeeDepartmentLocalService;
	@BeanReference(type = com.hrms.service.EmployeeDepartmentService.class)
	protected com.hrms.service.EmployeeDepartmentService employeeDepartmentService;
	@BeanReference(type = EmployeeDepartmentPersistence.class)
	protected EmployeeDepartmentPersistence employeeDepartmentPersistence;
	@BeanReference(type = com.hrms.service.EmployeeDesignationLocalService.class)
	protected com.hrms.service.EmployeeDesignationLocalService employeeDesignationLocalService;
	@BeanReference(type = com.hrms.service.EmployeeDesignationService.class)
	protected com.hrms.service.EmployeeDesignationService employeeDesignationService;
	@BeanReference(type = EmployeeDesignationPersistence.class)
	protected EmployeeDesignationPersistence employeeDesignationPersistence;
	@BeanReference(type = com.hrms.service.EmployeeLanguageDetailLocalService.class)
	protected com.hrms.service.EmployeeLanguageDetailLocalService employeeLanguageDetailLocalService;
	@BeanReference(type = com.hrms.service.EmployeeLanguageDetailService.class)
	protected com.hrms.service.EmployeeLanguageDetailService employeeLanguageDetailService;
	@BeanReference(type = EmployeeLanguageDetailPersistence.class)
	protected EmployeeLanguageDetailPersistence employeeLanguageDetailPersistence;
	@BeanReference(type = com.hrms.service.EmployeeLeaveLocalService.class)
	protected com.hrms.service.EmployeeLeaveLocalService employeeLeaveLocalService;
	@BeanReference(type = com.hrms.service.EmployeeLeaveService.class)
	protected com.hrms.service.EmployeeLeaveService employeeLeaveService;
	@BeanReference(type = EmployeeLeavePersistence.class)
	protected EmployeeLeavePersistence employeeLeavePersistence;
	@BeanReference(type = com.hrms.service.EmployeeMasterLocalService.class)
	protected com.hrms.service.EmployeeMasterLocalService employeeMasterLocalService;
	@BeanReference(type = com.hrms.service.EmployeeMasterService.class)
	protected com.hrms.service.EmployeeMasterService employeeMasterService;
	@BeanReference(type = EmployeeMasterPersistence.class)
	protected EmployeeMasterPersistence employeeMasterPersistence;
	@BeanReference(type = com.hrms.service.EmployeePreviousCompanyLocalService.class)
	protected com.hrms.service.EmployeePreviousCompanyLocalService employeePreviousCompanyLocalService;
	@BeanReference(type = com.hrms.service.EmployeePreviousCompanyService.class)
	protected com.hrms.service.EmployeePreviousCompanyService employeePreviousCompanyService;
	@BeanReference(type = EmployeePreviousCompanyPersistence.class)
	protected EmployeePreviousCompanyPersistence employeePreviousCompanyPersistence;
	@BeanReference(type = com.hrms.service.EmployeeProofLocalService.class)
	protected com.hrms.service.EmployeeProofLocalService employeeProofLocalService;
	@BeanReference(type = com.hrms.service.EmployeeProofService.class)
	protected com.hrms.service.EmployeeProofService employeeProofService;
	@BeanReference(type = EmployeeProofPersistence.class)
	protected EmployeeProofPersistence employeeProofPersistence;
	@BeanReference(type = com.hrms.service.EmployeeQualificationLocalService.class)
	protected com.hrms.service.EmployeeQualificationLocalService employeeQualificationLocalService;
	@BeanReference(type = com.hrms.service.EmployeeQualificationService.class)
	protected com.hrms.service.EmployeeQualificationService employeeQualificationService;
	@BeanReference(type = EmployeeQualificationPersistence.class)
	protected EmployeeQualificationPersistence employeeQualificationPersistence;
	@BeanReference(type = com.hrms.service.EmployeeSubDepartmentLocalService.class)
	protected com.hrms.service.EmployeeSubDepartmentLocalService employeeSubDepartmentLocalService;
	@BeanReference(type = com.hrms.service.EmployeeSubDepartmentService.class)
	protected com.hrms.service.EmployeeSubDepartmentService employeeSubDepartmentService;
	@BeanReference(type = EmployeeSubDepartmentPersistence.class)
	protected EmployeeSubDepartmentPersistence employeeSubDepartmentPersistence;
	@BeanReference(type = com.hrms.service.EmployeeTimesheetLocalService.class)
	protected com.hrms.service.EmployeeTimesheetLocalService employeeTimesheetLocalService;
	@BeanReference(type = com.hrms.service.EmployeeTimesheetService.class)
	protected com.hrms.service.EmployeeTimesheetService employeeTimesheetService;
	@BeanReference(type = EmployeeTimesheetPersistence.class)
	protected EmployeeTimesheetPersistence employeeTimesheetPersistence;
	@BeanReference(type = com.hrms.service.EmployeeTypeLocalService.class)
	protected com.hrms.service.EmployeeTypeLocalService employeeTypeLocalService;
	@BeanReference(type = com.hrms.service.EmployeeTypeService.class)
	protected com.hrms.service.EmployeeTypeService employeeTypeService;
	@BeanReference(type = EmployeeTypePersistence.class)
	protected EmployeeTypePersistence employeeTypePersistence;
	@BeanReference(type = com.hrms.service.EmployeeWarningLocalService.class)
	protected com.hrms.service.EmployeeWarningLocalService employeeWarningLocalService;
	@BeanReference(type = com.hrms.service.EmployeeWarningService.class)
	protected com.hrms.service.EmployeeWarningService employeeWarningService;
	@BeanReference(type = EmployeeWarningPersistence.class)
	protected EmployeeWarningPersistence employeeWarningPersistence;
	@BeanReference(type = com.hrms.service.InterviewLocalService.class)
	protected com.hrms.service.InterviewLocalService interviewLocalService;
	@BeanReference(type = com.hrms.service.InterviewService.class)
	protected com.hrms.service.InterviewService interviewService;
	@BeanReference(type = InterviewPersistence.class)
	protected InterviewPersistence interviewPersistence;
	@BeanReference(type = com.hrms.service.JobLibraryLocalService.class)
	protected com.hrms.service.JobLibraryLocalService jobLibraryLocalService;
	@BeanReference(type = com.hrms.service.JobLibraryService.class)
	protected com.hrms.service.JobLibraryService jobLibraryService;
	@BeanReference(type = JobLibraryPersistence.class)
	protected JobLibraryPersistence jobLibraryPersistence;
	@BeanReference(type = com.hrms.service.LeaveLocalService.class)
	protected com.hrms.service.LeaveLocalService leaveLocalService;
	@BeanReference(type = com.hrms.service.LeaveService.class)
	protected com.hrms.service.LeaveService leaveService;
	@BeanReference(type = LeavePersistence.class)
	protected LeavePersistence leavePersistence;
	@BeanReference(type = com.hrms.service.LeavesAppliedLocalService.class)
	protected com.hrms.service.LeavesAppliedLocalService leavesAppliedLocalService;
	@BeanReference(type = com.hrms.service.LeavesAppliedService.class)
	protected com.hrms.service.LeavesAppliedService leavesAppliedService;
	@BeanReference(type = LeavesAppliedPersistence.class)
	protected LeavesAppliedPersistence leavesAppliedPersistence;
	@BeanReference(type = com.hrms.service.OfferLocalService.class)
	protected com.hrms.service.OfferLocalService offerLocalService;
	@BeanReference(type = com.hrms.service.OfferService.class)
	protected com.hrms.service.OfferService offerService;
	@BeanReference(type = OfferPersistence.class)
	protected OfferPersistence offerPersistence;
	@BeanReference(type = com.hrms.service.ProofLocalService.class)
	protected com.hrms.service.ProofLocalService proofLocalService;
	@BeanReference(type = com.hrms.service.ProofService.class)
	protected com.hrms.service.ProofService proofService;
	@BeanReference(type = ProofPersistence.class)
	protected ProofPersistence proofPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private InterviewLocalServiceClpInvoker _clpInvoker = new InterviewLocalServiceClpInvoker();
}