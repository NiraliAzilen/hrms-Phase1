/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.hrms.model.impl;

import com.hrms.model.EmployeeDesignation;
import com.hrms.model.EmployeeDesignationModel;
import com.hrms.model.EmployeeDesignationSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EmployeeDesignation service. Represents a row in the &quot;HRMS_EmployeeDesignation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hrms.model.EmployeeDesignationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmployeeDesignationImpl}.
 * </p>
 *
 * @author yashpalsinh
 * @see EmployeeDesignationImpl
 * @see com.hrms.model.EmployeeDesignation
 * @see com.hrms.model.EmployeeDesignationModel
 * @generated
 */
@JSON(strict = true)
public class EmployeeDesignationModelImpl extends BaseModelImpl<EmployeeDesignation>
	implements EmployeeDesignationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a employee designation model instance should use the {@link com.hrms.model.EmployeeDesignation} interface instead.
	 */
	public static final String TABLE_NAME = "HRMS_EmployeeDesignation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "employeeDesignationId", Types.BIGINT },
			{ "designationName", Types.VARCHAR },
			{ "status", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table HRMS_EmployeeDesignation (employeeDesignationId LONG not null primary key,designationName VARCHAR(75) null,status BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table HRMS_EmployeeDesignation";
	public static final String ORDER_BY_JPQL = " ORDER BY employeeDesignation.employeeDesignationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY HRMS_EmployeeDesignation.employeeDesignationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hrms.model.EmployeeDesignation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hrms.model.EmployeeDesignation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hrms.model.EmployeeDesignation"),
			true);
	public static long STATUS_COLUMN_BITMASK = 1L;
	public static long EMPLOYEEDESIGNATIONID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EmployeeDesignation toModel(EmployeeDesignationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EmployeeDesignation model = new EmployeeDesignationImpl();

		model.setEmployeeDesignationId(soapModel.getEmployeeDesignationId());
		model.setDesignationName(soapModel.getDesignationName());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EmployeeDesignation> toModels(
		EmployeeDesignationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EmployeeDesignation> models = new ArrayList<EmployeeDesignation>(soapModels.length);

		for (EmployeeDesignationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hrms.model.EmployeeDesignation"));

	public EmployeeDesignationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeeDesignationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeeDesignationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeeDesignationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmployeeDesignation.class;
	}

	@Override
	public String getModelClassName() {
		return EmployeeDesignation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("employeeDesignationId", getEmployeeDesignationId());
		attributes.put("designationName", getDesignationName());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long employeeDesignationId = (Long)attributes.get(
				"employeeDesignationId");

		if (employeeDesignationId != null) {
			setEmployeeDesignationId(employeeDesignationId);
		}

		String designationName = (String)attributes.get("designationName");

		if (designationName != null) {
			setDesignationName(designationName);
		}

		Boolean status = (Boolean)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@JSON
	@Override
	public long getEmployeeDesignationId() {
		return _employeeDesignationId;
	}

	@Override
	public void setEmployeeDesignationId(long employeeDesignationId) {
		_employeeDesignationId = employeeDesignationId;
	}

	@JSON
	@Override
	public String getDesignationName() {
		if (_designationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _designationName;
		}
	}

	@Override
	public void setDesignationName(String designationName) {
		_designationName = designationName;
	}

	@JSON
	@Override
	public boolean getStatus() {
		return _status;
	}

	@Override
	public boolean isStatus() {
		return _status;
	}

	@Override
	public void setStatus(boolean status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public boolean getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			EmployeeDesignation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmployeeDesignation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmployeeDesignation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmployeeDesignationImpl employeeDesignationImpl = new EmployeeDesignationImpl();

		employeeDesignationImpl.setEmployeeDesignationId(getEmployeeDesignationId());
		employeeDesignationImpl.setDesignationName(getDesignationName());
		employeeDesignationImpl.setStatus(getStatus());

		employeeDesignationImpl.resetOriginalValues();

		return employeeDesignationImpl;
	}

	@Override
	public int compareTo(EmployeeDesignation employeeDesignation) {
		long primaryKey = employeeDesignation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmployeeDesignation)) {
			return false;
		}

		EmployeeDesignation employeeDesignation = (EmployeeDesignation)obj;

		long primaryKey = employeeDesignation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmployeeDesignationModelImpl employeeDesignationModelImpl = this;

		employeeDesignationModelImpl._originalStatus = employeeDesignationModelImpl._status;

		employeeDesignationModelImpl._setOriginalStatus = false;

		employeeDesignationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmployeeDesignation> toCacheModel() {
		EmployeeDesignationCacheModel employeeDesignationCacheModel = new EmployeeDesignationCacheModel();

		employeeDesignationCacheModel.employeeDesignationId = getEmployeeDesignationId();

		employeeDesignationCacheModel.designationName = getDesignationName();

		String designationName = employeeDesignationCacheModel.designationName;

		if ((designationName != null) && (designationName.length() == 0)) {
			employeeDesignationCacheModel.designationName = null;
		}

		employeeDesignationCacheModel.status = getStatus();

		return employeeDesignationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{employeeDesignationId=");
		sb.append(getEmployeeDesignationId());
		sb.append(", designationName=");
		sb.append(getDesignationName());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.hrms.model.EmployeeDesignation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>employeeDesignationId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeDesignationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>designationName</column-name><column-value><![CDATA[");
		sb.append(getDesignationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmployeeDesignation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmployeeDesignation.class
		};
	private long _employeeDesignationId;
	private String _designationName;
	private boolean _status;
	private boolean _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private EmployeeDesignation _escapedModel;
}