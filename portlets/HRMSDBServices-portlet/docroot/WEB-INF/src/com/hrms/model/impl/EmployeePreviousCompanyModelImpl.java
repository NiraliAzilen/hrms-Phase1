/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.hrms.model.impl;

import com.hrms.model.EmployeePreviousCompany;
import com.hrms.model.EmployeePreviousCompanyModel;
import com.hrms.model.EmployeePreviousCompanySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EmployeePreviousCompany service. Represents a row in the &quot;HRMS_EmployeePreviousCompany&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hrms.model.EmployeePreviousCompanyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmployeePreviousCompanyImpl}.
 * </p>
 *
 * @author yashpalsinh
 * @see EmployeePreviousCompanyImpl
 * @see com.hrms.model.EmployeePreviousCompany
 * @see com.hrms.model.EmployeePreviousCompanyModel
 * @generated
 */
@JSON(strict = true)
public class EmployeePreviousCompanyModelImpl extends BaseModelImpl<EmployeePreviousCompany>
	implements EmployeePreviousCompanyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a employee previous company model instance should use the {@link com.hrms.model.EmployeePreviousCompany} interface instead.
	 */
	public static final String TABLE_NAME = "HRMS_EmployeePreviousCompany";
	public static final Object[][] TABLE_COLUMNS = {
			{ "employeePreviousCompanyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "companyName", Types.VARCHAR },
			{ "jobTitle", Types.VARCHAR },
			{ "jobDiscription", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "createBy", Types.BIGINT },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table HRMS_EmployeePreviousCompany (employeePreviousCompanyId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,companyName VARCHAR(75) null,jobTitle VARCHAR(75) null,jobDiscription VARCHAR(75) null,startDate DATE null,endDate DATE null,createDate DATE null,modifiedDate DATE null,createBy LONG,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table HRMS_EmployeePreviousCompany";
	public static final String ORDER_BY_JPQL = " ORDER BY employeePreviousCompany.employeePreviousCompanyId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY HRMS_EmployeePreviousCompany.employeePreviousCompanyId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hrms.model.EmployeePreviousCompany"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hrms.model.EmployeePreviousCompany"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hrms.model.EmployeePreviousCompany"),
			true);
	public static long CREATEBY_COLUMN_BITMASK = 1L;
	public static long MODIFIEDBY_COLUMN_BITMASK = 2L;
	public static long EMPLOYEEPREVIOUSCOMPANYID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EmployeePreviousCompany toModel(
		EmployeePreviousCompanySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EmployeePreviousCompany model = new EmployeePreviousCompanyImpl();

		model.setEmployeePreviousCompanyId(soapModel.getEmployeePreviousCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCompanyName(soapModel.getCompanyName());
		model.setJobTitle(soapModel.getJobTitle());
		model.setJobDiscription(soapModel.getJobDiscription());
		model.setStartDate(soapModel.getStartDate());
		model.setEndDate(soapModel.getEndDate());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCreateBy(soapModel.getCreateBy());
		model.setModifiedBy(soapModel.getModifiedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EmployeePreviousCompany> toModels(
		EmployeePreviousCompanySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EmployeePreviousCompany> models = new ArrayList<EmployeePreviousCompany>(soapModels.length);

		for (EmployeePreviousCompanySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hrms.model.EmployeePreviousCompany"));

	public EmployeePreviousCompanyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeePreviousCompanyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeePreviousCompanyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeePreviousCompanyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmployeePreviousCompany.class;
	}

	@Override
	public String getModelClassName() {
		return EmployeePreviousCompany.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("employeePreviousCompanyId",
			getEmployeePreviousCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("companyName", getCompanyName());
		attributes.put("jobTitle", getJobTitle());
		attributes.put("jobDiscription", getJobDiscription());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createBy", getCreateBy());
		attributes.put("modifiedBy", getModifiedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long employeePreviousCompanyId = (Long)attributes.get(
				"employeePreviousCompanyId");

		if (employeePreviousCompanyId != null) {
			setEmployeePreviousCompanyId(employeePreviousCompanyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String companyName = (String)attributes.get("companyName");

		if (companyName != null) {
			setCompanyName(companyName);
		}

		String jobTitle = (String)attributes.get("jobTitle");

		if (jobTitle != null) {
			setJobTitle(jobTitle);
		}

		String jobDiscription = (String)attributes.get("jobDiscription");

		if (jobDiscription != null) {
			setJobDiscription(jobDiscription);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long createBy = (Long)attributes.get("createBy");

		if (createBy != null) {
			setCreateBy(createBy);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@JSON
	@Override
	public long getEmployeePreviousCompanyId() {
		return _employeePreviousCompanyId;
	}

	@Override
	public void setEmployeePreviousCompanyId(long employeePreviousCompanyId) {
		_employeePreviousCompanyId = employeePreviousCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		_companyName = companyName;
	}

	@JSON
	@Override
	public String getJobTitle() {
		if (_jobTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobTitle;
		}
	}

	@Override
	public void setJobTitle(String jobTitle) {
		_jobTitle = jobTitle;
	}

	@JSON
	@Override
	public String getJobDiscription() {
		if (_jobDiscription == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobDiscription;
		}
	}

	@Override
	public void setJobDiscription(String jobDiscription) {
		_jobDiscription = jobDiscription;
	}

	@JSON
	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@JSON
	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCreateBy() {
		return _createBy;
	}

	@Override
	public void setCreateBy(long createBy) {
		_columnBitmask |= CREATEBY_COLUMN_BITMASK;

		if (!_setOriginalCreateBy) {
			_setOriginalCreateBy = true;

			_originalCreateBy = _createBy;
		}

		_createBy = createBy;
	}

	public long getOriginalCreateBy() {
		return _originalCreateBy;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_columnBitmask |= MODIFIEDBY_COLUMN_BITMASK;

		if (!_setOriginalModifiedBy) {
			_setOriginalModifiedBy = true;

			_originalModifiedBy = _modifiedBy;
		}

		_modifiedBy = modifiedBy;
	}

	public long getOriginalModifiedBy() {
		return _originalModifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmployeePreviousCompany.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmployeePreviousCompany toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmployeePreviousCompany)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmployeePreviousCompanyImpl employeePreviousCompanyImpl = new EmployeePreviousCompanyImpl();

		employeePreviousCompanyImpl.setEmployeePreviousCompanyId(getEmployeePreviousCompanyId());
		employeePreviousCompanyImpl.setUserId(getUserId());
		employeePreviousCompanyImpl.setGroupId(getGroupId());
		employeePreviousCompanyImpl.setCompanyId(getCompanyId());
		employeePreviousCompanyImpl.setCompanyName(getCompanyName());
		employeePreviousCompanyImpl.setJobTitle(getJobTitle());
		employeePreviousCompanyImpl.setJobDiscription(getJobDiscription());
		employeePreviousCompanyImpl.setStartDate(getStartDate());
		employeePreviousCompanyImpl.setEndDate(getEndDate());
		employeePreviousCompanyImpl.setCreateDate(getCreateDate());
		employeePreviousCompanyImpl.setModifiedDate(getModifiedDate());
		employeePreviousCompanyImpl.setCreateBy(getCreateBy());
		employeePreviousCompanyImpl.setModifiedBy(getModifiedBy());

		employeePreviousCompanyImpl.resetOriginalValues();

		return employeePreviousCompanyImpl;
	}

	@Override
	public int compareTo(EmployeePreviousCompany employeePreviousCompany) {
		long primaryKey = employeePreviousCompany.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmployeePreviousCompany)) {
			return false;
		}

		EmployeePreviousCompany employeePreviousCompany = (EmployeePreviousCompany)obj;

		long primaryKey = employeePreviousCompany.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmployeePreviousCompanyModelImpl employeePreviousCompanyModelImpl = this;

		employeePreviousCompanyModelImpl._originalCreateBy = employeePreviousCompanyModelImpl._createBy;

		employeePreviousCompanyModelImpl._setOriginalCreateBy = false;

		employeePreviousCompanyModelImpl._originalModifiedBy = employeePreviousCompanyModelImpl._modifiedBy;

		employeePreviousCompanyModelImpl._setOriginalModifiedBy = false;

		employeePreviousCompanyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmployeePreviousCompany> toCacheModel() {
		EmployeePreviousCompanyCacheModel employeePreviousCompanyCacheModel = new EmployeePreviousCompanyCacheModel();

		employeePreviousCompanyCacheModel.employeePreviousCompanyId = getEmployeePreviousCompanyId();

		employeePreviousCompanyCacheModel.userId = getUserId();

		employeePreviousCompanyCacheModel.groupId = getGroupId();

		employeePreviousCompanyCacheModel.companyId = getCompanyId();

		employeePreviousCompanyCacheModel.companyName = getCompanyName();

		String companyName = employeePreviousCompanyCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			employeePreviousCompanyCacheModel.companyName = null;
		}

		employeePreviousCompanyCacheModel.jobTitle = getJobTitle();

		String jobTitle = employeePreviousCompanyCacheModel.jobTitle;

		if ((jobTitle != null) && (jobTitle.length() == 0)) {
			employeePreviousCompanyCacheModel.jobTitle = null;
		}

		employeePreviousCompanyCacheModel.jobDiscription = getJobDiscription();

		String jobDiscription = employeePreviousCompanyCacheModel.jobDiscription;

		if ((jobDiscription != null) && (jobDiscription.length() == 0)) {
			employeePreviousCompanyCacheModel.jobDiscription = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			employeePreviousCompanyCacheModel.startDate = startDate.getTime();
		}
		else {
			employeePreviousCompanyCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			employeePreviousCompanyCacheModel.endDate = endDate.getTime();
		}
		else {
			employeePreviousCompanyCacheModel.endDate = Long.MIN_VALUE;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			employeePreviousCompanyCacheModel.createDate = createDate.getTime();
		}
		else {
			employeePreviousCompanyCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			employeePreviousCompanyCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			employeePreviousCompanyCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		employeePreviousCompanyCacheModel.createBy = getCreateBy();

		employeePreviousCompanyCacheModel.modifiedBy = getModifiedBy();

		return employeePreviousCompanyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{employeePreviousCompanyId=");
		sb.append(getEmployeePreviousCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", companyName=");
		sb.append(getCompanyName());
		sb.append(", jobTitle=");
		sb.append(getJobTitle());
		sb.append(", jobDiscription=");
		sb.append(getJobDiscription());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createBy=");
		sb.append(getCreateBy());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.hrms.model.EmployeePreviousCompany");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>employeePreviousCompanyId</column-name><column-value><![CDATA[");
		sb.append(getEmployeePreviousCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyName</column-name><column-value><![CDATA[");
		sb.append(getCompanyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobTitle</column-name><column-value><![CDATA[");
		sb.append(getJobTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobDiscription</column-name><column-value><![CDATA[");
		sb.append(getJobDiscription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createBy</column-name><column-value><![CDATA[");
		sb.append(getCreateBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmployeePreviousCompany.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmployeePreviousCompany.class
		};
	private long _employeePreviousCompanyId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _companyId;
	private String _companyName;
	private String _jobTitle;
	private String _jobDiscription;
	private Date _startDate;
	private Date _endDate;
	private Date _createDate;
	private Date _modifiedDate;
	private long _createBy;
	private long _originalCreateBy;
	private boolean _setOriginalCreateBy;
	private long _modifiedBy;
	private long _originalModifiedBy;
	private boolean _setOriginalModifiedBy;
	private long _columnBitmask;
	private EmployeePreviousCompany _escapedModel;
}