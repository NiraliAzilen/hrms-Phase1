/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.hrms.model.impl;

import com.hrms.model.EmployeeQualification;
import com.hrms.model.EmployeeQualificationModel;
import com.hrms.model.EmployeeQualificationSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EmployeeQualification service. Represents a row in the &quot;HRMS_EmployeeQualification&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hrms.model.EmployeeQualificationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmployeeQualificationImpl}.
 * </p>
 *
 * @author yashpalsinh
 * @see EmployeeQualificationImpl
 * @see com.hrms.model.EmployeeQualification
 * @see com.hrms.model.EmployeeQualificationModel
 * @generated
 */
@JSON(strict = true)
public class EmployeeQualificationModelImpl extends BaseModelImpl<EmployeeQualification>
	implements EmployeeQualificationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a employee qualification model instance should use the {@link com.hrms.model.EmployeeQualification} interface instead.
	 */
	public static final String TABLE_NAME = "HRMS_EmployeeQualification";
	public static final Object[][] TABLE_COLUMNS = {
			{ "employeeQualificationId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "degreeName", Types.VARCHAR },
			{ "specialization", Types.VARCHAR },
			{ "university", Types.VARCHAR },
			{ "score", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "createBy", Types.BIGINT },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table HRMS_EmployeeQualification (employeeQualificationId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,degreeName VARCHAR(75) null,specialization VARCHAR(75) null,university VARCHAR(75) null,score VARCHAR(75) null,startDate DATE null,endDate DATE null,createDate DATE null,modifiedDate DATE null,createBy LONG,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table HRMS_EmployeeQualification";
	public static final String ORDER_BY_JPQL = " ORDER BY employeeQualification.employeeQualificationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY HRMS_EmployeeQualification.employeeQualificationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hrms.model.EmployeeQualification"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hrms.model.EmployeeQualification"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.hrms.model.EmployeeQualification"),
			true);
	public static long CREATEBY_COLUMN_BITMASK = 1L;
	public static long MODIFIEDBY_COLUMN_BITMASK = 2L;
	public static long EMPLOYEEQUALIFICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EmployeeQualification toModel(
		EmployeeQualificationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EmployeeQualification model = new EmployeeQualificationImpl();

		model.setEmployeeQualificationId(soapModel.getEmployeeQualificationId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setDegreeName(soapModel.getDegreeName());
		model.setSpecialization(soapModel.getSpecialization());
		model.setUniversity(soapModel.getUniversity());
		model.setScore(soapModel.getScore());
		model.setStartDate(soapModel.getStartDate());
		model.setEndDate(soapModel.getEndDate());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCreateBy(soapModel.getCreateBy());
		model.setModifiedBy(soapModel.getModifiedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EmployeeQualification> toModels(
		EmployeeQualificationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EmployeeQualification> models = new ArrayList<EmployeeQualification>(soapModels.length);

		for (EmployeeQualificationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hrms.model.EmployeeQualification"));

	public EmployeeQualificationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeeQualificationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeeQualificationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeeQualificationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmployeeQualification.class;
	}

	@Override
	public String getModelClassName() {
		return EmployeeQualification.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("employeeQualificationId", getEmployeeQualificationId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("degreeName", getDegreeName());
		attributes.put("specialization", getSpecialization());
		attributes.put("university", getUniversity());
		attributes.put("score", getScore());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createBy", getCreateBy());
		attributes.put("modifiedBy", getModifiedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long employeeQualificationId = (Long)attributes.get(
				"employeeQualificationId");

		if (employeeQualificationId != null) {
			setEmployeeQualificationId(employeeQualificationId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String degreeName = (String)attributes.get("degreeName");

		if (degreeName != null) {
			setDegreeName(degreeName);
		}

		String specialization = (String)attributes.get("specialization");

		if (specialization != null) {
			setSpecialization(specialization);
		}

		String university = (String)attributes.get("university");

		if (university != null) {
			setUniversity(university);
		}

		String score = (String)attributes.get("score");

		if (score != null) {
			setScore(score);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long createBy = (Long)attributes.get("createBy");

		if (createBy != null) {
			setCreateBy(createBy);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@JSON
	@Override
	public long getEmployeeQualificationId() {
		return _employeeQualificationId;
	}

	@Override
	public void setEmployeeQualificationId(long employeeQualificationId) {
		_employeeQualificationId = employeeQualificationId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public String getDegreeName() {
		if (_degreeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _degreeName;
		}
	}

	@Override
	public void setDegreeName(String degreeName) {
		_degreeName = degreeName;
	}

	@JSON
	@Override
	public String getSpecialization() {
		if (_specialization == null) {
			return StringPool.BLANK;
		}
		else {
			return _specialization;
		}
	}

	@Override
	public void setSpecialization(String specialization) {
		_specialization = specialization;
	}

	@JSON
	@Override
	public String getUniversity() {
		if (_university == null) {
			return StringPool.BLANK;
		}
		else {
			return _university;
		}
	}

	@Override
	public void setUniversity(String university) {
		_university = university;
	}

	@JSON
	@Override
	public String getScore() {
		if (_score == null) {
			return StringPool.BLANK;
		}
		else {
			return _score;
		}
	}

	@Override
	public void setScore(String score) {
		_score = score;
	}

	@JSON
	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@JSON
	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCreateBy() {
		return _createBy;
	}

	@Override
	public void setCreateBy(long createBy) {
		_columnBitmask |= CREATEBY_COLUMN_BITMASK;

		if (!_setOriginalCreateBy) {
			_setOriginalCreateBy = true;

			_originalCreateBy = _createBy;
		}

		_createBy = createBy;
	}

	public long getOriginalCreateBy() {
		return _originalCreateBy;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_columnBitmask |= MODIFIEDBY_COLUMN_BITMASK;

		if (!_setOriginalModifiedBy) {
			_setOriginalModifiedBy = true;

			_originalModifiedBy = _modifiedBy;
		}

		_modifiedBy = modifiedBy;
	}

	public long getOriginalModifiedBy() {
		return _originalModifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmployeeQualification.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmployeeQualification toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmployeeQualification)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmployeeQualificationImpl employeeQualificationImpl = new EmployeeQualificationImpl();

		employeeQualificationImpl.setEmployeeQualificationId(getEmployeeQualificationId());
		employeeQualificationImpl.setUserId(getUserId());
		employeeQualificationImpl.setGroupId(getGroupId());
		employeeQualificationImpl.setCompanyId(getCompanyId());
		employeeQualificationImpl.setDegreeName(getDegreeName());
		employeeQualificationImpl.setSpecialization(getSpecialization());
		employeeQualificationImpl.setUniversity(getUniversity());
		employeeQualificationImpl.setScore(getScore());
		employeeQualificationImpl.setStartDate(getStartDate());
		employeeQualificationImpl.setEndDate(getEndDate());
		employeeQualificationImpl.setCreateDate(getCreateDate());
		employeeQualificationImpl.setModifiedDate(getModifiedDate());
		employeeQualificationImpl.setCreateBy(getCreateBy());
		employeeQualificationImpl.setModifiedBy(getModifiedBy());

		employeeQualificationImpl.resetOriginalValues();

		return employeeQualificationImpl;
	}

	@Override
	public int compareTo(EmployeeQualification employeeQualification) {
		long primaryKey = employeeQualification.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmployeeQualification)) {
			return false;
		}

		EmployeeQualification employeeQualification = (EmployeeQualification)obj;

		long primaryKey = employeeQualification.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmployeeQualificationModelImpl employeeQualificationModelImpl = this;

		employeeQualificationModelImpl._originalCreateBy = employeeQualificationModelImpl._createBy;

		employeeQualificationModelImpl._setOriginalCreateBy = false;

		employeeQualificationModelImpl._originalModifiedBy = employeeQualificationModelImpl._modifiedBy;

		employeeQualificationModelImpl._setOriginalModifiedBy = false;

		employeeQualificationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmployeeQualification> toCacheModel() {
		EmployeeQualificationCacheModel employeeQualificationCacheModel = new EmployeeQualificationCacheModel();

		employeeQualificationCacheModel.employeeQualificationId = getEmployeeQualificationId();

		employeeQualificationCacheModel.userId = getUserId();

		employeeQualificationCacheModel.groupId = getGroupId();

		employeeQualificationCacheModel.companyId = getCompanyId();

		employeeQualificationCacheModel.degreeName = getDegreeName();

		String degreeName = employeeQualificationCacheModel.degreeName;

		if ((degreeName != null) && (degreeName.length() == 0)) {
			employeeQualificationCacheModel.degreeName = null;
		}

		employeeQualificationCacheModel.specialization = getSpecialization();

		String specialization = employeeQualificationCacheModel.specialization;

		if ((specialization != null) && (specialization.length() == 0)) {
			employeeQualificationCacheModel.specialization = null;
		}

		employeeQualificationCacheModel.university = getUniversity();

		String university = employeeQualificationCacheModel.university;

		if ((university != null) && (university.length() == 0)) {
			employeeQualificationCacheModel.university = null;
		}

		employeeQualificationCacheModel.score = getScore();

		String score = employeeQualificationCacheModel.score;

		if ((score != null) && (score.length() == 0)) {
			employeeQualificationCacheModel.score = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			employeeQualificationCacheModel.startDate = startDate.getTime();
		}
		else {
			employeeQualificationCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			employeeQualificationCacheModel.endDate = endDate.getTime();
		}
		else {
			employeeQualificationCacheModel.endDate = Long.MIN_VALUE;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			employeeQualificationCacheModel.createDate = createDate.getTime();
		}
		else {
			employeeQualificationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			employeeQualificationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			employeeQualificationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		employeeQualificationCacheModel.createBy = getCreateBy();

		employeeQualificationCacheModel.modifiedBy = getModifiedBy();

		return employeeQualificationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{employeeQualificationId=");
		sb.append(getEmployeeQualificationId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", degreeName=");
		sb.append(getDegreeName());
		sb.append(", specialization=");
		sb.append(getSpecialization());
		sb.append(", university=");
		sb.append(getUniversity());
		sb.append(", score=");
		sb.append(getScore());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createBy=");
		sb.append(getCreateBy());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.hrms.model.EmployeeQualification");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>employeeQualificationId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeQualificationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>degreeName</column-name><column-value><![CDATA[");
		sb.append(getDegreeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>specialization</column-name><column-value><![CDATA[");
		sb.append(getSpecialization());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>university</column-name><column-value><![CDATA[");
		sb.append(getUniversity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>score</column-name><column-value><![CDATA[");
		sb.append(getScore());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createBy</column-name><column-value><![CDATA[");
		sb.append(getCreateBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmployeeQualification.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmployeeQualification.class
		};
	private long _employeeQualificationId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _companyId;
	private String _degreeName;
	private String _specialization;
	private String _university;
	private String _score;
	private Date _startDate;
	private Date _endDate;
	private Date _createDate;
	private Date _modifiedDate;
	private long _createBy;
	private long _originalCreateBy;
	private boolean _setOriginalCreateBy;
	private long _modifiedBy;
	private long _originalModifiedBy;
	private boolean _setOriginalModifiedBy;
	private long _columnBitmask;
	private EmployeeQualification _escapedModel;
}